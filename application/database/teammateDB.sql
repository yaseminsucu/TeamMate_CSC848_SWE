-- MySQL Script generated by MySQL Workbench
-- Sun Jul 28 10:44:41 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TeammateDB
-- -----------------------------------------------------
DROP DATABASE IF EXISTS TeammateDB;
CREATE DATABASE TeammateDB;
USE TeammateDB;
-- -----------------------------------------------------
-- Table `Registered Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Registered Users` ;

CREATE TABLE IF NOT EXISTS `Registered Users` (
  `userID` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `profilePicture` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Organizations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Organizations` ;

CREATE TABLE IF NOT EXISTS `Organizations` (
  `orgID` INT NOT NULL,
  `orgName` VARCHAR(45) NOT NULL,
  `orgOwner` INT NOT NULL,
  `orgDescription` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`orgID`),
  INDEX `FK_ORGS_ORGOWNER_idx` (`orgOwner` ASC) VISIBLE,
  CONSTRAINT `FK_ORGS_ORGOWNER`
    FOREIGN KEY (`orgOwner`)
    REFERENCES `Registered Users` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Groups` ;

CREATE TABLE IF NOT EXISTS `Groups` (
  `groupID` INT NOT NULL,
  `org` INT NOT NULL,
  `groupName` VARCHAR(45) NOT NULL,
  `sortOrder` INT NOT NULL,
  `groupImage` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`groupID`),
  INDEX `FK_GROUPS_ORG_idx` (`org` ASC) VISIBLE,
  CONSTRAINT `FK_GROUPS_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Member` ;

CREATE TABLE IF NOT EXISTS `Member` (
  `memberID` INT NOT NULL,
  `orgPerms` INT NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `lastLogin` DATETIME NOT NULL,
  `org` INT NOT NULL,
  `group` INT NULL,
  `user` INT NOT NULL,
  `activeMember` TINYINT NOT NULL,
  `sortOrder` INT NOT NULL,
  PRIMARY KEY (`memberID`),
  INDEX `FK_MEMBER_ORG_idx` (`org` ASC) VISIBLE,
  INDEX `FK_MEMBER_GROUP_idx` (`group` ASC) VISIBLE,
  INDEX `FK_MEMBER_USER_idx` (`user` ASC) VISIBLE,
  CONSTRAINT `FK_MEMBER_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_MEMBER_GROUP`
    FOREIGN KEY (`group`)
    REFERENCES `Groups` (`groupID`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `FK_MEMBER_USER`
    FOREIGN KEY (`user`)
    REFERENCES `Registered Users` (`userID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Award Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Award Type` ;

CREATE TABLE IF NOT EXISTS `Award Type` (
  `awardID` INT NOT NULL,
  `awardDescription` VARCHAR(255) NOT NULL,
  `awardImage` VARCHAR(255) NOT NULL,
  `awardTitle` VARCHAR(45) NOT NULL,
  `org` INT NOT NULL,
  PRIMARY KEY (`awardID`),
  INDEX `FK_AT_ORG_idx` (`org` ASC) VISIBLE,
  CONSTRAINT `FK_AT_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Award Instance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Award Instance` ;

CREATE TABLE IF NOT EXISTS `Award Instance` (
  `awardInstanceID` INT NOT NULL,
  `issuedBy` INT NOT NULL,
  `recievedBy` INT NOT NULL,
  `awardType` INT NOT NULL,
  `nominationStatus` TINYINT NOT NULL,
  `dateGiven` DATETIME NOT NULL,
  `citation` VARCHAR(255) NOT NULL,
  INDEX `FK_AI_AWARDTYPE_idx` (`awardType` ASC) VISIBLE,
  PRIMARY KEY (`awardInstanceID`),
  INDEX `FK_AI_RECIEVED_idx` (`recievedBy` ASC) VISIBLE,
  INDEX `FK_AI_ISSUED_idx` (`issuedBy` ASC) VISIBLE,
  CONSTRAINT `FK_AI_ISSUED`
    FOREIGN KEY (`issuedBy`)
    REFERENCES `Member` (`memberID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_AI_RECIEVED`
    FOREIGN KEY (`recievedBy`)
    REFERENCES `Member` (`memberID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_AI_AWARDTYPE`
    FOREIGN KEY (`awardType`)
    REFERENCES `Award Type` (`awardID`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Qualification Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Qualification Type` ;

CREATE TABLE IF NOT EXISTS `Qualification Type` (
  `qualificationID` INT NOT NULL,
  `qualificationDescription` VARCHAR(255) NOT NULL,
  `qualificationImage` VARCHAR(255) NOT NULL,
  `qualificationTitle` VARCHAR(45) NOT NULL,
  `org` INT NOT NULL,
  PRIMARY KEY (`qualificationID`),
  INDEX `FK_QT_ORG_idx` (`org` ASC) VISIBLE,
  CONSTRAINT `FK_QT_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Qualification Instance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Qualification Instance` ;

CREATE TABLE IF NOT EXISTS `Qualification Instance` (
  `qualInstanceID` INT NOT NULL,
  `issuedBy` INT NOT NULL,
  `recievedBy` INT NOT NULL,
  `qualificationType` INT NOT NULL,
  `nominationStatus` TINYINT NOT NULL,
  `dateGiven` DATETIME NOT NULL,
  `citation` VARCHAR(255) NOT NULL,
  INDEX `FK_QI_ISSUED_idx` (`issuedBy` ASC) VISIBLE,
  INDEX `FK_QI_RECIEVED_idx` (`recievedBy` ASC) VISIBLE,
  INDEX `FK_QI_QUALIFICATIONTYPE_idx` (`qualificationType` ASC) VISIBLE,
  PRIMARY KEY (`qualInstanceID`),
  CONSTRAINT `FK_QI_ISSUED`
    FOREIGN KEY (`issuedBy`)
    REFERENCES `Member` (`memberID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_QI_RECIEVED`
    FOREIGN KEY (`recievedBy`)
    REFERENCES `Member` (`memberID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_QI_QUALIFICATIONTYPE`
    FOREIGN KEY (`qualificationType`)
    REFERENCES `Qualification Type` (`qualificationID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Events` ;

CREATE TABLE IF NOT EXISTS `Events` (
  `eventID` INT NOT NULL,
  `org` INT NOT NULL,
  `eventTitle` VARCHAR(255) NOT NULL,
  `eventDescription` VARCHAR(255) NOT NULL,
  `eventDate` DATETIME NOT NULL,
  `eventType` VARCHAR(45) NOT NULL,
  `eventPrereqs` VARCHAR(255) NULL,
  PRIMARY KEY (`eventID`),
  INDEX `FK_EVENTS_ORG_idx` (`org` ASC) VISIBLE,
  CONSTRAINT `FK_EVENTS_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Custom section`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Custom section` ;

CREATE TABLE IF NOT EXISTS `Custom section` (
  `customSec_ID` INT NOT NULL,
  `accessLevel` INT NULL,
  `plainText` VARCHAR(255) NULL,
  `thirdParty` VARCHAR(255) NULL,
  `docCreator` INT NOT NULL,
  `org` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `type` INT NOT NULL,
  PRIMARY KEY (`customSec_ID`),
  INDEX `FK_CS_DOCCREATOR_idx` (`docCreator` ASC) VISIBLE,
  INDEX `FK_CS_ORG_idx` (`org` ASC) VISIBLE,
  CONSTRAINT `FK_CS_DOCCREATOR`
    FOREIGN KEY (`docCreator`)
    REFERENCES `Member` (`memberID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_CS_ORG`
    FOREIGN KEY (`org`)
    REFERENCES `Organizations` (`orgID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Comments` ;

CREATE TABLE IF NOT EXISTS `Comments` (
  `commentID` VARCHAR(45) NOT NULL,
  `userID` INT NOT NULL,
  `pageType` VARCHAR(45) NOT NULL,
  `pageKey` INT NOT NULL,
  `comment` VARCHAR(255) NOT NULL,
  `commentDate` DATETIME NOT NULL,
  PRIMARY KEY (`commentID`),
  INDEX `FK_Comments_USER_idx` (`userID` ASC) VISIBLE,
  CONSTRAINT `FK_Comments_USER`
    FOREIGN KEY (`userID`)
    REFERENCES `Registered Users` (`userID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event Reminder`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Event Reminder` ;

CREATE TABLE IF NOT EXISTS `Event Reminder` (
  `eventReminderID` INT NOT NULL,
  `event` INT NOT NULL,
  `member` INT NOT NULL,
  `eventAttended` TINYINT NOT NULL,
  PRIMARY KEY (`eventReminderID`),
  INDEX `FK_ER_MEMBER_idx` (`member` ASC) VISIBLE,
  CONSTRAINT `FK_ER_EVENT`
    FOREIGN KEY (`event`)
    REFERENCES `Events` (`eventID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_ER_MEMBER`
    FOREIGN KEY (`member`)
    REFERENCES `Member` (`memberID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

